#
# Cookbook Name:: collectd
# Recipe:: default
#
# Copyright 2010, Atari, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

package "collectd" do
  package_name node[:collectd][:pkg_name]
end

directory node[:collectd][:cfg_dir] do
  owner "root"
  group node[:collectd][:cfg_group]
  mode "755"
end

directory "#{node[:collectd][:cfg_dir]}/plugins" do
  owner "root"
  group node[:collectd][:cfg_group]
  mode "755"
end

directory node[:collectd][:base_dir] do
  owner "root"
  group node[:collectd][:cfg_group]
  mode "755"
  recursive true
end

directory node[:collectd][:plugin_dir] do
  owner "root"
  group node[:collectd][:cfg_group]
  mode "755"
  recursive true
end

%w(collectd collection thresholds).each do |file|
  template "#{node[:collectd][:cfg_dir]}/#{file}.conf" do
    source "#{file}.conf.erb"
    owner "root"
    group node[:collectd][:cfg_group]
    mode "644"
    notifies :restart, "service[collectd]"
  end
end

if node[:platform_family] == "mac_os_x"
  link "/usr/local/etc/collectd.conf" do
    to "/usr/local/etc/collectd/collectd.conf"
  end
end

ruby_block "delete_old_plugins" do
  block do
    Dir["#{node[:collectd][:cfg_dir]}/plugins/*.conf"].each do |path|
      autogen = false
      File.open(path).each_line do |line|
        if line.start_with?('#') and line.include?('autogenerated')
          autogen = true
          break
        end
      end
      if autogen
        begin
          resources(:template => path)
        rescue ArgumentError, Chef::Exceptions::ResourceNotFound
          # If the file is autogenerated and has no template it has likely been removed from the run list
          Chef::Log.info("Deleting old plugin config in #{path}")
          File.unlink(path)
        end
      end
    end
  end
end

include_recipe "collectd::service"
